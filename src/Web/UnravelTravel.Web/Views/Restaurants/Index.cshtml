@model UnravelTravel.Models.ViewModels.Restaurants.RestaurantIndexViewModel

@{
    ViewBag.Title = "Restaurants";
}

<h2 class="text-center">All restaurants</h2>
<form method="get" asp-controller="Restaurants" asp-action="Index">
    <div class="row d-flex justify-content-between">
        <div class="form-group">
            <label class="text-primary">Search</label>
            <input class="btn btn-outline-primary" name="SearchString" value="@Model.SearchString">
            <button type="submit" class="btn btn-outline-primary"><i class="fas fa-search"></i></button>
        </div>
        <input type="hidden" name="Page" value="@Model.PageNumber">
        <div class="form-group">
            <label class="text-primary">Show:</label>
            <select class="btn btn-outline-primary" name="PageSize" onchange="this.form.submit();">
                <option value="6" selected="@(Model.PageSize == 6 ? true : false)">6</option>
                <option value="12" selected="@(Model.PageSize == 12 ? true : false)">12</option>
                <option value="24" selected="@(Model.PageSize == 24 ? true : false)">24</option>
                <option value="48" selected="@(Model.PageSize == 48 ? true : false)">48</option>
            </select>
        </div>
        <div class="form-group">
            <label class="text-primary">Sort by:</label>
            <select class="btn btn-outline-primary" name="Sorter" id="Sorter" onchange="this.form.submit();">
                <option value="1" selected="@(Model.Sorter.ToString() == "Name" ? true : false)">Name</option>
                <option value="2" selected="@(Model.Sorter.ToString() == "Rating" ? true : false)">Rating</option>
                <option value="3" selected="@(Model.Sorter.ToString() == "Type" ? true : false)">Type</option>
                <option value="4" selected="@(Model.Sorter.ToString() == "Destination" ? true : false)">Destination</option>
            </select>
        </div>
    </div>
</form>
<hr />
<div class="card-deck container-fluid">
    @foreach (var item in Model.RestaurantViewModels)
    {
        <div class="col-md-4">
            <div class="card text-white bg-info mb-3" style="max-width: 20rem; height: 450px">
                <a asp-controller="Restaurants" asp-action="Details" asp-route-id="@item.Id">
                    <img style="height: 200px; width: 100%;" class="card-img-top" src="@item.ImageUrl" alt="Card image cap">
                </a>
                <div class="card-body text-center">
                    <h5 class="card-title">@item.Name</h5>
                    <h5 class="card-title">
                        <a class="text-white" asp-area="" asp-controller="Destinations" asp-action="Details" asp-route-id="@item.DestinationId">
                            @item.DestinationName
                        </a>
                    </h5>
                    <p class="text-white">@item.SplitWordsType</p>
                    <p class="text-white">
                        Rating:
                        @if (item.AverageRating == 0)
                        {
                            <span>No reviews yet</span>
                        }
                        else
                        {
                            <span>@item.AverageRating</span>
                        }
                    </p>
                    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <div calss="row">
                            <a class="btn btn-outline-primary" asp-area="Administrator" asp-controller="Restaurants" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-outline-warning" asp-area="Administrator" asp-controller="Restaurants" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                    }
                    else
                    {
                        <a class=" btn btn-outline-info" asp-area="" asp-controller="Restaurants" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    }
                </div>
            </div>
        </div>
    }
</div>
<div class="d-flex justify-content-around">
    @Html.PagedListPager((IPagedList)Model.RestaurantViewModels,
        page => Url.Action( "Index",
            new {PageNumber = page,  PageSize = Model.PageSize, SearchString = Model.SearchString
            }),
        new PagedListRenderOptions
        {
            MaximumPageNumbersToDisplay = 5,
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
</div>